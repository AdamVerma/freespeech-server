
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.5.0
 * Query Engine version: 0362da9eebca54d94c8ef5edd3b2e90af99ba452
 */
Prisma.prismaVersion = {
  client: "4.5.0",
  engine: "0362da9eebca54d94c8ef5edd3b2e90af99ba452"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.AccessTokenOrderByRelevanceFieldEnum = makeEnum({
  id: 'id',
  access_token: 'access_token',
  userId: 'userId'
});

exports.Prisma.AccessTokenScalarFieldEnum = makeEnum({
  id: 'id',
  access_token: 'access_token',
  userId: 'userId'
});

exports.Prisma.OrganizationOrderByRelevanceFieldEnum = makeEnum({
  id: 'id',
  name: 'name'
});

exports.Prisma.OrganizationScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name'
});

exports.Prisma.ProjectOrderByRelevanceFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  description: 'description',
  image: 'image',
  userId: 'userId'
});

exports.Prisma.ProjectScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  description: 'description',
  image: 'image',
  columns: 'columns',
  index: 'index',
  public: 'public',
  created_at: 'created_at',
  updated_at: 'updated_at',
  userId: 'userId'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});

exports.Prisma.S3ResourceOrderByRelevanceFieldEnum = makeEnum({
  url: 'url',
  userId: 'userId'
});

exports.Prisma.S3ResourceScalarFieldEnum = makeEnum({
  id: 'id',
  url: 'url',
  created_at: 'created_at',
  updated_at: 'updated_at',
  userId: 'userId'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.TileOrderByRelevanceFieldEnum = makeEnum({
  id: 'id',
  link_id: 'link_id',
  display_text: 'display_text',
  speak_text: 'speak_text',
  image: 'image',
  modifier: 'modifier',
  background_color: 'background_color',
  border_color: 'border_color',
  text_color: 'text_color',
  userId: 'userId',
  conjugations: 'conjugations'
});

exports.Prisma.TilePageOrderByRelevanceFieldEnum = makeEnum({
  name: 'name',
  user_id: 'user_id',
  projectId: 'projectId'
});

exports.Prisma.TilePageScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  projectId: 'projectId'
});

exports.Prisma.TileScalarFieldEnum = makeEnum({
  id: 'id',
  tile_index: 'tile_index',
  tap_count: 'tap_count',
  link_id: 'link_id',
  display_text: 'display_text',
  speak_text: 'speak_text',
  image: 'image',
  navigation_page_id: 'navigation_page_id',
  modifier: 'modifier',
  background_color: 'background_color',
  border_color: 'border_color',
  text_color: 'text_color',
  is_silent: 'is_silent',
  is_invisible: 'is_invisible',
  is_accented: 'is_accented',
  created_at: 'created_at',
  updated_at: 'updated_at',
  tilePageId: 'tilePageId',
  userId: 'userId',
  conjugations: 'conjugations'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserOrderByRelevanceFieldEnum = makeEnum({
  id: 'id',
  identifier_token: 'identifier_token',
  email: 'email',
  name: 'name',
  image: 'image',
  hashed_password: 'hashed_password',
  theme: 'theme',
  organizationId: 'organizationId'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  id: 'id',
  identifier_token: 'identifier_token',
  email: 'email',
  name: 'name',
  image: 'image',
  hashed_password: 'hashed_password',
  theme: 'theme',
  organizationId: 'organizationId'
});


exports.Prisma.ModelName = makeEnum({
  User: 'User',
  Organization: 'Organization',
  AccessToken: 'AccessToken',
  Tile: 'Tile',
  TilePage: 'TilePage',
  Project: 'Project',
  S3Resource: 'S3Resource'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
